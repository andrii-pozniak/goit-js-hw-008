{"mappings":"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","sources":["src/js/gallery-items.js","node_modules/@swc/helpers/src/_class_call_check.mjs","node_modules/@swc/helpers/src/_create_class.mjs","node_modules/@swc/helpers/src/_define_property.mjs","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/01-gallery.js"],"sourcesContent":["export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.3\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let scrollDiv = document.createElement('div'),\n                    paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n\n                scrollDiv.classList.add('sl-scrollbar-measure');\n\n                document.body.appendChild(scrollDiv);\n                scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                document.body.removeChild(scrollDiv);\n\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self' ? this.relatedElements[this.currentImageIndex] : this.relatedElements[this.currentImageIndex].querySelector(this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n            this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;","// Add imports above this line\nimport { galleryItems } from './gallery-items';\n// Change code below this line\nimport SimpleLightbox from \"simplelightbox/dist/simple-lightbox.esm\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n// new add\nconst imgGalleryCard = document.querySelector(`.gallery`);\n\nconst imgGallery = onCreateImgCard(galleryItems);\n\n// Create card\nimgGalleryCard.insertAdjacentHTML(\"beforeend\", imgGallery);\n\nfunction onCreateImgCard(galleryItems) {\n    return galleryItems.map(({preview, original, description}) => {\n       return `\n       <div class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"${original}\">\n          <img class=\"gallery__image\"\n          src=\"${preview}\"\n          data-source=\"${original}\"\n          alt=\"${description}\"\n          />\n     </a>\n    </div>\n       ` ;       \n    }).join(\"\");\n    \n};\n\nconst light = new SimpleLightbox(`.gallery__item a`, { captionsData: 'alt',captionDelay: 250,});\nconsole.log(galleryItems);\n"],"names":["$9d886f23975dc289$export$f795133be3c5eb8c","preview","original","description","$197c8b34b6a42fd8$export$2e2bcd8739ae039","instance","Constructor","TypeError","$b40bcb50466abe4e$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$9139f4380ced0e7c$export$2e2bcd8739ae039","obj","value","SimpleLightbox","elements","options","_this","this","sourceAttr","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","window","test","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","assign","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","Array","from","document","querySelectorAll","relatedElements","transitionPrefix","calculateTransitionPrefix","transitionCapable","initialLocationHash","hash","getRelated","filter","element","src","getAttribute","imgArr","indexOf","push","createDomNodes","domNodes","wrapper","appendChild","closeButton","navigation","spinner","eventNamespace","event","isValidLink","currentTarget","preventDefault","isAnimating","initialImageIndex","openImage","addEventListener","isOpen","body","parentElement","classList","contains","throttle","controlCoordinates","currentImage","setAttribute","protoProps","staticProps","opts","get","supportsPassive","e","overlay","createElement","add","dataset","opacityTarget","overlayOpacity","innerHTML","concat","counter","caption","image","func","limit","inThrottle","apply","arguments","setTimeout","RegExp","s","documentElement","style","type","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","isAppleDevice","scrollDiv","paddingRight","parseInt","offsetWidth","removeChild","originalPaddingRight","scrollbarWidth","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","removeEventListener","fadeOut","toggleScrollbar","querySelector","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","loadedImages","direction","slideDirection","newIndex","slide","show","adjustImage","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","loadImage","updateURL","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","captionContainer","hide","setCaption","min","max","bind","hashchangeHandler","getElementsByTagName","tagName","match","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","setZoomData","clientX","clientY","touches","sqrt","possibleDir","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","split","newHash","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","updateHash","pos","speed","targetURL","events","callback","wrap","_didIteratorError","_iteratorError","_step","namespaces","_didIteratorError1","_iteratorError1","_step1","_iterator1","Symbol","iterator","_iteratorNormalCompletion1","done","passive","return","_iterator","_iteratorNormalCompletion","duration","fade","step","isFadeIn","initialDisplay","input","fullyNamespacedEvents","elem","off","prototype","$d8d07e2615fdd861$var$imgGalleryCard","$d8d07e2615fdd861$var$imgGallery","map","param","join","insertAdjacentHTML","$da756839c7c43f1c$export$2e2bcd8739ae039","console","log"],"version":3,"file":"01-gallery.3deadc73.js.map"}